// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders animated fab 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "backgroundColor": "transparent",
      "borderRadius": 28,
      "elevation": 6,
      "opacity": 1,
      "position": "absolute",
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 5,
        "width": 0,
      },
      "shadowOpacity": 0.24,
      "shadowRadius": 6,
      "transform": Array [
        Object {
          "scale": 1,
        },
      ],
    }
  }
>
  <View
    collapsable={false}
    style={
      Object {
        "borderRadius": 28,
        "height": 56,
        "transform": Array [
          Object {
            "scaleY": 1,
          },
        ],
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "elevation": 0,
          },
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="none"
        style={
          Object {
            "borderRadius": 28,
            "bottom": 0,
            "elevation": 6,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 84,
          }
        }
      />
      <View
        collapsable={false}
        pointerEvents="none"
        style={
          Object {
            "borderRadius": 28,
            "bottom": 0,
            "elevation": 6,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 28,
              },
            ],
            "width": 56,
          }
        }
      />
    </View>
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        Object {
          "borderRadius": 28,
          "flexDirection": "row",
          "overflow": "hidden",
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "backgroundColor": "#03dac4",
            "borderRadius": 28,
            "height": 56,
            "left": 28,
            "right": undefined,
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
            "width": 84,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 28,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "borderRadius": 28,
                  "height": 56,
                },
                Object {
                  "width": 84,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="none"
    style={
      Object {
        "alignItems": "center",
        "height": 56,
        "justifyContent": "center",
        "left": 28,
        "position": "absolute",
        "right": undefined,
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
        "width": 56,
      }
    }
  >
    <Text
      accessibilityElementsHidden={true}
      importantForAccessibility="no-hide-descendants"
      pointerEvents="none"
      selectable={false}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "rgba(0, 0, 0, .54)",
            "fontSize": 24,
          },
        ]
      }
    >
      □
    </Text>
  </View>
  <View
    pointerEvents="none"
  >
    <Text
      collapsable={false}
      ellipsizeMode="tail"
      numberOfLines={1}
      onTextLayout={[Function]}
      style={
        Object {
          "color": "rgba(0, 0, 0, .54)",
          "fontFamily": "System",
          "fontWeight": "500",
          "minWidth": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 28,
          "textAlign": "left",
          "textTransform": "uppercase",
          "top": -28,
          "transform": Array [
            Object {
              "translateX": 56,
            },
          ],
          "writingDirection": "ltr",
        }
      }
    />
  </View>
</View>
`;

exports[`renders animated fab with label on the left 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "backgroundColor": "transparent",
      "borderRadius": 28,
      "elevation": 6,
      "opacity": 1,
      "position": "absolute",
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 5,
        "width": 0,
      },
      "shadowOpacity": 0.24,
      "shadowRadius": 6,
      "transform": Array [
        Object {
          "scale": 1,
        },
      ],
    }
  }
>
  <View
    collapsable={false}
    style={
      Object {
        "borderRadius": 28,
        "height": 56,
        "transform": Array [
          Object {
            "scaleY": 1,
          },
        ],
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "elevation": 0,
          },
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="none"
        style={
          Object {
            "borderRadius": 28,
            "bottom": 0,
            "elevation": 6,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 84,
          }
        }
      />
      <View
        collapsable={false}
        pointerEvents="none"
        style={
          Object {
            "borderRadius": 28,
            "bottom": 0,
            "elevation": 6,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
            "width": 56,
          }
        }
      />
    </View>
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        Object {
          "borderRadius": 28,
          "flexDirection": "row",
          "overflow": "hidden",
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "backgroundColor": "#03dac4",
            "borderRadius": 28,
            "height": 56,
            "left": -28,
            "right": undefined,
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
            "width": 84,
          }
        }
      >
        <View
          accessibilityLabel="text"
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 28,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "borderRadius": 28,
                  "height": 56,
                },
                Object {
                  "width": 84,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="none"
    style={
      Object {
        "alignItems": "center",
        "height": 56,
        "justifyContent": "center",
        "left": -28,
        "position": "absolute",
        "right": undefined,
        "transform": Array [
          Object {
            "translateX": 28,
          },
        ],
        "width": 56,
      }
    }
  >
    <Text
      accessibilityElementsHidden={true}
      importantForAccessibility="no-hide-descendants"
      pointerEvents="none"
      selectable={false}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "rgba(0, 0, 0, .54)",
            "fontSize": 24,
          },
        ]
      }
    >
      □
    </Text>
  </View>
  <View
    pointerEvents="none"
  >
    <Text
      collapsable={false}
      ellipsizeMode="tail"
      numberOfLines={1}
      onTextLayout={[Function]}
      style={
        Object {
          "color": "rgba(0, 0, 0, .54)",
          "fontFamily": "System",
          "fontWeight": "500",
          "left": 28,
          "minWidth": 0,
          "opacity": 0,
          "position": "absolute",
          "textAlign": "left",
          "textTransform": "uppercase",
          "top": -28,
          "transform": Array [
            Object {
              "translateX": 56,
            },
          ],
          "writingDirection": "ltr",
        }
      }
    >
      text
    </Text>
  </View>
</View>
`;

exports[`renders animated fab with label on the right by default 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "backgroundColor": "transparent",
      "borderRadius": 28,
      "elevation": 6,
      "opacity": 1,
      "position": "absolute",
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 5,
        "width": 0,
      },
      "shadowOpacity": 0.24,
      "shadowRadius": 6,
      "transform": Array [
        Object {
          "scale": 1,
        },
      ],
    }
  }
>
  <View
    collapsable={false}
    style={
      Object {
        "borderRadius": 28,
        "height": 56,
        "transform": Array [
          Object {
            "scaleY": 1,
          },
        ],
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "elevation": 0,
          },
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="none"
        style={
          Object {
            "borderRadius": 28,
            "bottom": 0,
            "elevation": 6,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 84,
          }
        }
      />
      <View
        collapsable={false}
        pointerEvents="none"
        style={
          Object {
            "borderRadius": 28,
            "bottom": 0,
            "elevation": 6,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 28,
              },
            ],
            "width": 56,
          }
        }
      />
    </View>
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        Object {
          "borderRadius": 28,
          "flexDirection": "row",
          "overflow": "hidden",
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "backgroundColor": "#03dac4",
            "borderRadius": 28,
            "height": 56,
            "left": 28,
            "right": undefined,
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
            "width": 84,
          }
        }
      >
        <View
          accessibilityLabel="text"
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 28,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "borderRadius": 28,
                  "height": 56,
                },
                Object {
                  "width": 84,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="none"
    style={
      Object {
        "alignItems": "center",
        "height": 56,
        "justifyContent": "center",
        "left": 28,
        "position": "absolute",
        "right": undefined,
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
        "width": 56,
      }
    }
  >
    <Text
      accessibilityElementsHidden={true}
      importantForAccessibility="no-hide-descendants"
      pointerEvents="none"
      selectable={false}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "rgba(0, 0, 0, .54)",
            "fontSize": 24,
          },
        ]
      }
    >
      □
    </Text>
  </View>
  <View
    pointerEvents="none"
  >
    <Text
      collapsable={false}
      ellipsizeMode="tail"
      numberOfLines={1}
      onTextLayout={[Function]}
      style={
        Object {
          "color": "rgba(0, 0, 0, .54)",
          "fontFamily": "System",
          "fontWeight": "500",
          "minWidth": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 28,
          "textAlign": "left",
          "textTransform": "uppercase",
          "top": -28,
          "transform": Array [
            Object {
              "translateX": 56,
            },
          ],
          "writingDirection": "ltr",
        }
      }
    >
      text
    </Text>
  </View>
</View>
`;
